import Head from 'next/head'
import React, { useEffect, useRef, useState } from 'react'
import DashboardLayout from '../../components/DashboardLayout'
import Button from '../../components/Button';
import CourseModal from '../../components/CourseModal';
import axios from 'axios';
import { FadeLoader } from 'react-spinners';

const AddCourse = () => {


    const [open, setOpen] = useState(false)
    const [check, setCheck] = useState(false)
    const [checkBoxList, setCheckBoxList] = useState([])
    const checkRef = useRef()
    const [courses, setCourses] = useState([])
    const [load, setLoad] = useState(false)
    const [selectedCourse, setSelectedCourse] = useState()
    const [User, setUser] = useState()
    // const [selectedStudent, setSelectedStudent] = useState()
    const [Attendance, setAttendance] = useState([])
    const [err, setErr] = useState()
    const selectRef = useRef(null)


    useEffect(() => {
        setLoad(true)
        const user = JSON.parse(window.localStorage.getItem("user"))
        if (user) {
            setUser(user)
        }
    }, [])


    useEffect(() => {
        getCourse()
    }, [])




    useEffect(() => {
        updateArray()
    }, [Attendance])




    useEffect(() => {
        if (checkBoxList) {
            const Arr = Array.from(checkBoxList)
            console.log(checkBoxList)
            console.log(Arr)
            Arr?.forEach((box) => {
                if (box) {
                    console.log(box)
                }
            })
        }
    }, [checkBoxList])

    const updateArray = () => {
        Attendance.forEach((attend) => {
            setCheckBoxList((prev) => ({ ...prev, [attend._id]: false }))
        })
    }

    const handleChange = (e) => {
        const { id, checked } = e.target;
        setCheckBoxList((prevState) => ({
            ...prevState,
            [id]: checked,
        }));

    }

    const getCourse = async (course) => {
        console.log("Course called")
        setLoad(true)
        await axios.get(`https://attendx-2hi6.onrender.com/course/all-courses`).then((res) => {
            console.log("Course complete")
            setLoad(false)
            setErr(false)
            setAttendance(res.data)
            console.log(res.data)
        }).catch((err) => {
            console.log("Course error")
            setErr(true)
            setLoad(false)
            console.log("error")
            console.log(err)
        })

    }





    return (
        <div>
            <Head>
                <title>Attend X</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>


                {open ? <CourseModal text="update" texting="updating" user={User} courses={Attendance} Attendance={checkBoxList} setOpen={setOpen} color="bg-[#183DA7]" icon="image/Notebook.svg" /> :

                    <DashboardLayout>

                        <div className='pb-[24px] md:pb-[32px]  gap-[4px]  md:flex justify-between items-center'>
                            <h1 className='text-[#141414] font-[500] text-[20px] mt-[8px] md:mt-0 md:text-[30px] leading-[28px]  md:leading-[38px] medium  '> Add new course </h1>

                            <div className='flex items-center gap-[8px]' >
                                <div className='flex items-center gap-[8px] text-[#9e9e9e] cursor-pointer'>
                                    <p onClick={() => {
                                        Router.push("/students/course")
                                    }}>Courses </p>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none">
                                        <path d="M9 5L15 12L9 19" stroke="#1C274C" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                    </svg>
                                </div>

                                <p className='text-[#141414]'>
                                    Add Courses
                                </p>
                            </div>

                            <hr className='h-[1px] md:hidden bg-[#d9d9d9] w-full relative mt-[12]  ml-[-16px]  ' />

                        </div>


                        <>
                            <div className='absolute ml-[-16px] md:static md:ml-0  w-full h-[65vh] bg-transparent  md:bg-white overflow-scroll scroll-hidden overflow-x-scroll scroll-hidden'>

                                {
                                    load ? <div className='flex items-center justify-center h-full w-full'>
                                        < FadeLoader color="#183DA7" />
                                    </div> : <table className='w-[900px] bg-transparent'>
                                        <thead className=' w-full'>
                                            <tr>
                                                <td className='text-[14px] md:text-[16px]'><input type='checkbox' disabled value="checked" />  </td>
                                                <td className='text-[14px] md:text-[16px]'>Semester</td>
                                                <td className='text-[14px] md:text-[16px]'>Course Code</td>
                                                <td className='text-[14px] md:text-[16px]'>Course Title</td>
                                                <td className='text-[14px] md:text-[16px]'>Credit</td>

                                            </tr>
                                        </thead>

                                        <tbody >
                                            {Attendance?.map((Attendance, index) => (
                                                <tr key={index} className=''>
                                                    <td className='text-[14px] md:text-[16px]'>
                                                        <input type='checkbox' ref={checkRef}
                                                            id={Attendance._id}
                                                            checked={checkBoxList[Attendance._id]}
                                                            onChange={(e) => { handleChange(e) }}
                                                        /></td>
                                                    <td className='text-[14px] md:text-[16px]'>{Attendance.course_semester}</td>
                                                    <td className='text-[14px] md:text-[16px]'>{Attendance.course_code}</td>
                                                    <td className='text-[14px] md:text-[16px]'>{Attendance.course_title}</td>
                                                    <td className='text-[14px] md:text-[16px]'>{Attendance.course_credit}</td>

                                                </tr>
                                            ))}
                                        </tbody>


                                    </table>
                                }


                            </div>


                            <div className='w-[150px] mt-[32px] absolute  bottom-2 md:bottom-[25px]' onClick={() => {
                                setOpen(true)

                            }}>
                                <Button text="Update Course" />
                            </div>
                        </>

                    </DashboardLayout>
                }
            </main>
        </div>
    )
}

export default AddCourse