import React, { useEffect, useRef, useState } from 'react'
import DashboardLayout from '../../../components/DashboardLayout'
import Head from 'next/head'

import { Courses } from '../../../data'
import Image from 'next/image'
import { useRouter } from 'next/router'
import Button from '../../../components/Button'
import Attendance from '../../../components/Attendance'
var QRCode = require('qrcode')
import Course from '../Course'

const Home = () => {
    const Router = useRouter()
    const selectRef = useRef()
    const [selectedCourse, setSelectedCourse] = useState()
    const [openModal, setOpenModal] = useState(false)
    const [qrImage, setQrImage] = useState(false)


    useEffect(() => {
        setSelectedCourse(Courses[0])
        document.addEventListener("click", (e) => {
            console.log(e.target.closest(".modelBackground"))
            if (e.target.closest(".newqrcode") || e.target.closest(".modelBackground")) {
                setOpenModal(true)
            } else {
                setOpenModal(false)
            }

        })
    }, [openModal])


    const qrcode = () => {
        console.log("called")
        QRCode.toDataURL('Ezomon Glory', function (err, url) {
            console.log(url)
            setQrImage(url)
        })
    }


    return (
        <div>
            <Head>
                <title>Attend X</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="">
                {openModal ? (
                    <div className='h-screen  flex top-0 z-30  w-full items-center justify-center modalBackground'>
                        <div className=' p-[32px] md:w-[440px] w-[90%]   z-50 bg-white flex flex-col items-center justify-center modelBackground' >
                            <div className='items-center justify-center flex flex-col'>
                                <Image src="/image/Scanner 3.svg" width={40} height={40} alt='scan' />
                                <h1 className=' text-[#141414] text-[24px] mt-[10px] md:text-[30px] medium md:leading-[38px] '>New QR-CODE</h1>
                                <h2 className=' text-[#9E9E9E] md:text-[14px] md:leading-[22px] md:font-[400] text-[12px] '>Track student attendance with this QR Code</h2>
                            </div>

                            <Image src={qrImage} width={220} height={220} alt="Qr-code" />

                            <div className='w-[80%] mx-auto'>
                                <div className=' mt-[16px] w-full h-[40px] cursor-pointer flex items-center justify-center bg-[#183DA7] text-[#fff] border-[0.5px] border-[#E2EAFE]  py-[12px] px-[16px] text-center rounded-md leading-[24px] ' > Share </div>

                                <div className=' mt-[16px] w-full h-[40px] cursor-pointer flex items-center justify-center bg-[#FFF] text-[#183DA7] border-[0.5px] border-[#E2EAFE]  py-[12px] px-[16px] text-center rounded-md leading-[24px] ' > Download </div>
                            </div>
                        </div>
                    </div>
                ) :
                    <DashboardLayout openModal={openModal}>





                        <div className=' h-screen'>
                            <div className='md:flex border-transparent border-[1px] border-b-[#D9D9D9]  w-full hidden'>
                                {Courses.map((course, i) => (
                                    <h1 className={`mr-[40px] cursor-pointer   ${selectedCourse?.name === course.name ? "text-[#183DA7] border-[0.5px] border-transparent border-b-[#183DA7] pb-[10px]  " : 'text-[#9E9E9E]  pb-[10px] '} `} key={i} onClick={() => {
                                        setSelectedCourse(course)
                                    }} >{course.name}</h1>
                                ))}
                            </div>


                            <div className='block md:hidden' >
                                <select ref={selectRef} className='w-[95px] bg-transparent outline-none border-transparent p-2 text-[14px]' onClick={() => {

                                    Courses.forEach((course, i) => {
                                        if (Number(selectRef.current.value) === i) {
                                            setSelectedCourse(course)
                                        }
                                    })

                                }} >
                                    {Courses.map((course, i) => {

                                        return (
                                            <option className='' key={course?.name} value={i}
                                            >{course?.name}</option>
                                        )
                                    }
                                    )
                                    }
                                </select>
                            </div>
                            <div className='pb-[16px] pt-[40px] md:pb-[32px] flex justify-between items-center'>
                                <h1 className='text-[#141414] font-[500] text-[18px]  md:text-[30px] leading-[28px]  md:leading-[38px] medium '> Attendance </h1>
                                <div className='hidden md:flex bg-[#183DA7] px-[16px] py-[8px]  space-x-[8px] text-white items-center rounded-md cursor-pointer text-[14px] newqrcode'
                                    onClick={() => {
                                        qrcode()
                                        setOpenModal(true)
                                    }}
                                >
                                    <Image src="/image/QR Code.svg" height={20} width={20} alt="qr" /> <span>New QR-Code</span>
                                </div>
                            </div>

                            {selectedCourse?.Attendance.length > 0 ? <Attendance setOpenModal={setOpenModal} setSelectedCourse={setSelectedCourse} openModal={openModal} selectedCourse={selectedCourse} /> : <div className=' flex flex-col items-center justify-center mt-[5%] space-y-[24px] '>
                                <Image src="/image/Attendance.svg" width={245} height={220} alt="ll" />
                                <p className='text-center'>Hello Glory, no attendance have been <br />
                                    generated for this course.</p>
                            </div>}

                        </div>


                        <div className='fixed right-[20px] items-center justify-center flex bottom-[20%] bg-[#183DA7] rounded-full w-[48px] h-[48px] md:hidden newqrcode' onClick={() => {
                            setOpenModal(true)
                        }}>
                            <Image src="/image/QR Code.svg" alt="plus" width={24} height={24} />
                        </div>


                    </DashboardLayout>
                }
            </main>

        </div>
    )
}

export default Home