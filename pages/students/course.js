
import Head from 'next/head'
import Image from 'next/image'
import React, { useEffect, useState } from 'react'
import DashboardLayout from '../../components/DashboardLayout'
import { useRouter } from 'next/router'
import CourseModal from '../../components/CourseModal'
import axios from 'axios'
import { FadeLoader } from 'react-spinners'
import StudentNoCourse from '../../components/StudentNoCourse'
import StudentHeader from '../../components/StudentHeader'


const Course = () => {

    const Router = useRouter()
    const [open, setOpen] = useState(false)
    const [load, setLoad] = useState(true)
    const [ID, setID] = useState()
    const [user, setUser] = useState()
    const [err, setErr] = useState(false)
    const [called, setCalled] = useState(false)
    const [Attendance, setAttendance] = useState([])

    useEffect(() => {
        const user = JSON.parse(window.localStorage.getItem("user"))
        if (user) {
            console.log(user)
            setUser(user)
        }

        if (user.courses.length === 0) {
            window.location.href = "/students/AddCourse"
        }
    }, [])

    useEffect(() => {

        if (!called) {
            console.log("calling")
            getCourses()
        }

        if (user?.courses.length === 0) {
            console.log("hey empty")
        }


    }, [user])


    useEffect(() => {
        console.log("atten")
        console.log(Attendance.length)
        // setLoad(false)
    }, [Attendance])


    const getCourses = async () => {
        setLoad(true)
        await axios.get("https://attendx-2hi6.onrender.com/course/all-courses").then((res) => {
            console.log(res.data)
            // setLoad(false)
            res.data.forEach(course => {
                course.students.forEach((lecturer) => {
                    if (user?.identity_number === lecturer.matric_number) {
                        console.log(course)
                        setCalled(!called)
                        setErr(false)
                        console.log("Called")
                        Attendance.push(course)
                        setLoad(false)
                        // setAttendance(...Attendance, course)
                        // setLoad(false)
                    }

                })
            });
        }).catch((Err) => {
            setLoad(false)
            setErr(true)
        })
    }





    return (
        <div>

            <Head>
                <title>Attend X</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                {load ? <div className='h-screen flex items-center justify-center  w-full'>
                    < FadeLoader color="#183DA7" />
                </div> :
                    err ? <div>
                        <StudentHeader />
                        <div>  <Image src="/image/Teacher.svg" className='hidden md:block' width={430} height={300} alt="teacher" /> <Image src="/image/Teacher.svg" className='block md:hidden' width={330} height={250} alt="teacher" />  <p className='text-[#505050] font-[500] text-center '>
                            An error occured please check if you are connected <br /> to the internet and try again</p> </div>
                    </div> : Attendance.length >= 1 ?
                        open ? <CourseModal ID={ID} setLoad={setLoad} user={user} Attendance={Attendance} setAttendance={setAttendance} text="delete" texting="removal" color="bg-red-600" setOpen={setOpen} icon="/image/Danger Circle.svg" /> :
                            <>
                                <StudentHeader />

                                <div className='w-full h-full md:p-[40px] bg-[#F4F4F4] '>
                                    <div className='pb-[16px]  md:pb-[32px] flex justify-between items-center pt-[40px] '>
                                        <h1 className='text-[#141414] font-[500] text-[18px]  md:text-[30px] leading-[28px]  md:leading-[38px] medium ml-[16px] md:ml-0 '> Courses </h1>
                                        <div className='hidden md:flex bg-[#183DA7] px-[16px] py-[8px]  space-x-[8px] text-white items-center rounded-md cursor-pointer' onClick={() => {
                                            Router.push("/students/AddCourse")
                                        }} >
                                            <Image src="/image/Frame.svg" height={20} width={20} alt="qr" /> <span>Add Course</span>
                                        </div>
                                    </div>




                                    <div className='w-full h-[80vh] bg-transparent md:bg-white  overflow-scroll scroll-hidden overflow-x-scroll scroll-hidden'>
                                        <table className='w-[900px] md:w-full bg-transparent'>
                                            <thead className='bg-gray-200  w-full'>
                                                <tr>
                                                    <td className='text-[14px] md:text-[16px]'>#</td>
                                                    <td className='text-[14px] md:text-[16px]'>Semester</td>
                                                    <td className='text-[14px] md:text-[16px]'>Course Code</td>
                                                    <td className='text-[14px] md:text-[16px]'>Course Title</td>
                                                    <td className='text-[14px] md:text-[16px]'>Credit</td>
                                                    <td className='text-[14px] md:text-[16px]'></td>

                                                </tr>
                                            </thead>


                                            <tbody >
                                                {Attendance?.length >= 1 && (Attendance?.map((Attendance, index) => (
                                                    <tr key={index} className=''>
                                                        <td className='text-[14px] md:text-[16px]'>{index + 1}</td>
                                                        <td className='text-[14px] md:text-[16px]'>{Attendance.course_semester}</td>
                                                        <td className='text-[14px] md:text-[16px]'>{Attendance.course_code}</td>
                                                        <td className='text-[14px] md:text-[16px]'>{Attendance.course_title}</td>
                                                        <td className='text-[14px] md:text-[16px]'>{Attendance.course_credit}</td>
                                                        <td className=''>
                                                            <div className='text-[12px] md:text-[12px] px-[12px] py-[3px] text-[#C60000]  border-[0.5px] border-[#C60000] rounded-md cursor-pointer  inline-block' onClick={() => {
                                                                setID(Attendance.course_code)
                                                                setOpen(true)
                                                            }} >

                                                                Delete
                                                            </div>
                                                        </td>

                                                    </tr>
                                                )))}
                                            </tbody>
                                        </table>
                                    </div>

                                    <div className='fixed right-[20px] items-center justify-center flex bottom-[20%] bg-[#183DA7] rounded-full w-[48px] h-[48px] md:hidden' onClick={() => {
                                        Router.push("/students/AddCourse")
                                    }}>
                                        <Image src="/image/Frame.svg" alt="plus" width={24} height={24} />
                                    </div>
                                </div>

                            </>
                        : <div className='h-screen flex flex-col justify-center '>
                            <StudentHeader />
                            <StudentNoCourse />

                        </div>}
            </main>
        </div>
    )
}

export default Course